<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

	<ItemGroup>
		<PropertyPageSchema
		  Include="$(MSBuildThisFileDirectory)$(MSBuildThisFileName).xml" />
		<AvailableItemName Include="BabelContentTask">
			<Targets>_BabelContentTask</Targets>
		</AvailableItemName>
	</ItemGroup>

	<UsingTask TaskName="Microsoft.VisualStudio.Graphics.Api.ImageContentTask" AssemblyFile="$(VSInstallDir_110)\Common7\IDE\Extensions\Microsoft\VsGraphics\Microsoft.VisualStudio.Graphics.Api.dll" />

	<PropertyGroup>
		<ContentFilesProjectOutputGroupDependsOn>$(ContentFilesProjectOutputGroupDependsOn);MakeDirsForBabelContentTask</ContentFilesProjectOutputGroupDependsOn>
	</PropertyGroup>

	<!-- Makes the the directories that the task uses -->
	<Target Name="MakeDirsForBabelContentTask">

		<ItemGroup Condition="'@(BabelContentTask)'!=''">
			<BabelContentOutputs Include="@(BabelContentTask->Metadata('ContentOutput')->Distinct())">
				<DeploymentContent>True</DeploymentContent>
			</BabelContentOutputs>
			<BabelContentTaskDirsToMake Include="@(BabelContentTask->DirectoryName())" />
			<BabelContentOutputs>
				<Link Condition="'%(BabelContentOutputs.DeploymentContent)'=='True'">$([MSBuild]::MakeRelative($(OutDir), %(FullPath)))</Link>
			</BabelContentOutputs>

			<None Include="@(BabelContentOutputs);" />
		</ItemGroup>

		<MakeDir Directories="@(BabelContentTaskDirsToMake)" />

		<ItemGroup>
			<BabelContentTaskDirsToMake Remove="@(BabelContentTaskDirsToMake)" />
		</ItemGroup>
	</Target>

	<!-- Inject a custom target into Clean by extending CleanDependsOn -->
	<PropertyGroup>
		<CleanDependsOn>
			$(CleanDependsOn);
			CustomAfterClean
		</CleanDependsOn>
	</PropertyGroup>

	<!-- Clean the generated output files -->
	<Target Name="CustomAfterClean" DependsOnTargets="MakeDirsForBabelContentTask">
		<Delete Files="%(BabelContentTask.ContentOutput)" />
	</Target>

	<Target
	  Name="_BabelContentTask"
	  BeforeTargets="$(BabelContentTaskBeforeTargets)"
	  AfterTargets="$(BabelContentTaskAfterTargets)"
	  Condition="'@(BabelContentTask)' != ''"
	  DependsOnTargets="_SelectedFiles;MakeDirsForBabelContentTask">

		<ItemGroup Condition="'@(SelectedFiles)' != ''">
			<BabelContentTask Remove="@(BabelContentTask)" Condition="'%(Identity)' != '@(SelectedFiles)'" />
		</ItemGroup>
		<Message
		  Importance="High"
		  Text="%(BabelContentTask.Identity)" />
		<BabelContentTask
			Condition                    = "'@(BabelContentTask)' != '' and '%(BabelContentTask.ExcludedFromBuild)'!='true'"
			Source                       = "%(BabelContentTask.Identity)"
			ContentOutput                = "%(BabelContentTask.ContentOutput)"
			Compress                     = "%(BabelContentTask.Compress)"
			GenerateMips                 = "%(BabelContentTask.GenerateMips)"
			IntermediateDir 	         = "$(IntDir)"
      />
	</Target>

</Project>
